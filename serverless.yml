service: chat-app-aws
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:BatchWriteItem
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/ChatConnections"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/ChatMessages"
    - Effect: Allow
      Action:
        - execute-api:ManageConnections
      Resource: 
        - "arn:aws:execute-api:${self:provider.region}:*:*/@connections/*"


functions:
  connect:
    handler: ./src/functions/connections.connect
    events:
      - websocket:
          route: $connect
  disconnect:
    handler: ./src/functions/connections.disconnect
    events:
      - websocket:
          route: $disconnect
  sendMessage:
    handler: ./src/functions/messages.sendMessage
    events:
      - websocket:
          route: sendMessage
  deleteAllCommonMessages:
    handler: ./src/functions/messages.deleteAllCommonMessages
    events:
      - http:
          method: delete
          path: /messages/common
          cors: true

resources:
  Resources:
    ChatConnections:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ChatConnections
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
    ChatTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ChatMessages
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      seed: true
      inMemory: true
      port: 8000